import colorama
import socket
import ssl
from urllib.parse import urlparse
from colorama import Fore, Back, Style
import os

colorama.init(autoreset=True)

def certificateInformation():
    url = input(Back.BLACK + Fore.CYAN + "Enter the URL: ")
    report = input(Back.BLACK + Fore.CYAN + "Enter the file name for the report: ") 

    # Create the "reports" directory if it doesn't exist
    os.makedirs("reports", exist_ok=True)

    raporPath = os.path.join("reports", report)

    try:
        rep = open(raporPath, "w")
        rep.close()

        parsed_url = urlparse(url)
        domain = parsed_url.netloc
        if not domain:
            raise ValueError(Fore.RED + "Invalid URL provided")

        context = ssl.create_default_context()
        server = context.wrap_socket(socket.socket(), server_hostname=domain)
        server.connect((domain, 443))
        certificate = server.getpeercert()
        print(Fore.GREEN + "[+]Certificate Serial Number:", certificate.get('serialNumber'))
        print(Fore.GREEN + "[+]Certificate SSL Version:", certificate.get('version'))
        print(Fore.GREEN + "[+]Certificate:", certificate)
        raporIcerik = "[+]Certificate Serial Number: " + str(certificate.get('serialNumber')) + "\n"
        raporIcerik += "[+]Certificate SSL Version: " + str(certificate.get('version')) + "\n"
        raporIcerik += "[+]Certificate: " + str(certificate) + "\n"

        with open(raporPath, "a") as rapor:
            rapor.write(raporIcerik)
    except ValueError as e:
        print("[-]Invalid URL provided:", str(e))
    except socket.error as e:
        print("[-]Socket error occurred:", str(e))
    except ssl.SSLError as e:
        print("[-]SSL error occurred:", str(e))
    except Exception as e:
        print("[-]An error occurred:", str(e))

if __name__ == "__main__":
    certificateInformation()
